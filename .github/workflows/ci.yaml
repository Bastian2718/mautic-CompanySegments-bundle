name: Continuous Integration
on:
  push:
    branches:
      - master
      - 'MTC\-[0-9]+'
  pull_request:

env:
  PLUGIN_DIR: plugins/LeuchtfeuerCompanySegmentsBundle # Same as extra.install-directory-name in composer.json

jobs:
  integration:
    name: Integration tests ${{ matrix.php-versions }}, ${{ matrix.db-types }}, Mautic ${{ matrix.mautic-versions }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        php-versions: [8.0, 8.1]
        db-types: ["mysql", "mariadb"]
        mautic-versions: ["5.0", "5.x"]
    services:
      database:
        image: ${{ matrix.db-types == 'mysql' && 'mysql:8.0' || 'mariadb:10.3' }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: mautictest
        ports:
          - 3306
        options: >-
          --shm-size=2gb
          --name=${{ matrix.db-types }}
          --tmpfs=/var/lib/mysql
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout Mautic
        uses: actions/checkout@v4
        with:
          repository: mautic/mautic
          ref: ${{ matrix.mautic-versions }}

      - name: Checkout this plugin
        uses: actions/checkout@v4
        with:
          path: ${{ env.PLUGIN_DIR }}

      - name: Setup PHP Environment
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          ini-values: -dpcov.enabled=0, pcov.directory=."
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql
          coverage: pcov

      - name: add MySQL config file
        run: |
          mysqldump --version
          mysqldump --print-defaults
          cp .github/ci-files/.my.cnf ~/.my.cnf
          mysqldump --print-defaults

      - name: Set SYMFONY_ENV to test
        run: |
          echo "SYMFONY_ENV=test" >> $GITHUB_ENV
          echo "MAUTIC_ENV=test" >> $GITHUB_ENV

      - name: NPM Cache
        uses: actions/cache@v4
        with:
          path: ./var/cache/js
          key: ${{ runner.os }}-js-${{ hashFiles('**/package-lock.json', 'webpack.config.js') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-js-${{ hashFiles('**/package-lock.json', 'webpack.config.js') }}
            ${{ runner.os }}-js-

      - name: Install composer requirements.
        # composer install cache - https://github.com/ramsey/composer-install
        uses: "ramsey/composer-install@v3"

      - name: Install Mautic
        env:
          DB_PORT: ${{ job.services.database.ports[3306] }}
        run: |
          cp ./.github/ci-files/local.php ./app/config/local.php
          php bin/console mautic:install --force http://localhost

      - name: Install Plugins
        env:
          DB_PORT: ${{ job.services.database.ports[3306] }}
        run: php bin/console mautic:plugins:install --env=dev

      - name: Check PHP CS
        run: bin/php-cs-fixer fix ${{ env.PLUGIN_DIR }} --config=.php-cs-fixer.php -v --dry-run --show-progress=dots --diff

      - name: Patch Mautic PHPStan config
        run: php ${{ env.PLUGIN_DIR }}/.github/phpstan-config.php

      - name: Run PHPStan
        run: cat phpstan.neon && SYMFONY_ENV=dev APP_ENV=dev APP_DEBUG=1 composer phpstan -- ${{ env.PLUGIN_DIR }}

      - name: Rector
        run: SYMFONY_ENV=test bin/console cache:warmup && composer rector -- --dry-run --no-progress-bar ${{ env.PLUGIN_DIR }}

      - name: Twig Lint
        run: bin/console lint:twig ${{ env.PLUGIN_DIR }}

      - name: Run PHPUNIT tests
        env:
          DB_PORT: ${{ job.services.database.ports[3306] }}
        run: XDEBUG_MODE=coverage APP_DEBUG=0 php -dzend.assertions=1 -dpcov.enabled=1 -dpcov.directory=. -dpcov.exclude="~tests|themes|vendor~" bin/phpunit -d memory_limit=1G --bootstrap vendor/autoload.php --configuration ${{ env.PLUGIN_DIR }}/phpunit.xml.dist --coverage-clover=${{ env.PLUGIN_DIR }}/coverage.xml --coverage-text

      - name: Upload coverage report
        if: ${{ matrix.php-versions == '8.1' && matrix.db-types == 'mysql' && matrix.mautic-versions == '5.x' }} # upload just once, change for your matrix
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true

      - name: Upload logs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.php-versions }}-${{ matrix.db-types }}-${{ matrix.mautic-versions }}
          path: var/logs/
